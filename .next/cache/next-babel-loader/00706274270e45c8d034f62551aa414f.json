{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nano/Documents/AdmProyecto/zona-recreativa-web/pages/proveedores.js\";\nvar __jsx = React.createElement;\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Navigation from './components/Navigation';\nimport Layout from './components/GeneralLayout';\nimport React, { Component } from 'react';\n\nvar Proveedores =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Proveedores, _Component);\n\n  function Proveedores() {\n    var _this;\n\n    _classCallCheck(this, Proveedores);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Proveedores).call(this)); //inicializa state\n\n    _this.state = {\n      email: '',\n      message: ''\n    }; //Se necesita hacer bind a todas la funciones que se usen dentro de la clase.\n\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  } //Se activa cuando se presiona enviar\n\n\n  _createClass(Proveedores, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      //No se que hace pero debe ir al inicio\n      e.preventDefault(); //Poner aqui lo que tiene que hacer el form cuando se envia la informacion\n\n      console.log(this.state); //Reincia los inputs\n\n      this.setState({\n        email: '',\n        message: ''\n      });\n    } //Actualiza los valores cada vez que se hace un cambio en el input\n\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      //obtiene el valor y el nombre del componente que cambio\n      var _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name; // console.log(value, name);\n      // Actualiza el campo que se modifico\n\n      this.setState(_defineProperty({}, name, value)); // console.log(this.state)\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, __jsx(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        className: \"text-center pb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Proveedores\"), __jsx(\"div\", {\n        className: \"col-6 pt-4 mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, __jsx(Form, {\n        className: \"col-xs-2 col-sm-3 col-md-4 col-lg-7 col-xl-8\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __jsx(Form.Group, {\n        controlId: \"formContact.Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, __jsx(Form.Control, {\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"Nombre\",\n        value: this.state.name,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), __jsx(Form.Control, {\n        name: \"lastName\",\n        type: \"text\",\n        placeholder: \"Apellidos\",\n        value: this.state.lastName,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), __jsx(Form.Group, {\n        controlId: \"formContact.Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, __jsx(Form.Control, {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email\",\n        value: this.state.email,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), __jsx(Form.Group, {\n        controlId: \"formContact.Mensaje\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, __jsx(Form.Control, {\n        name: \"message\",\n        as: \"textarea\",\n        rows: \"4\",\n        placeholder: \"Escriba aqu\\xED su mensaje\",\n        value: this.state.message,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), __jsx(Button, {\n        variant: \"dark\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Enviar\")))));\n    }\n  }]);\n\n  return Proveedores;\n}(Component);\n\nexport default Proveedores;","map":{"version":3,"sources":["/home/nano/Documents/AdmProyecto/zona-recreativa-web/pages/proveedores.js"],"names":["Form","Button","Navigation","Layout","React","Component","Proveedores","state","email","message","handleInputChange","bind","handleSubmit","e","preventDefault","console","log","setState","target","value","name","lastName"],"mappings":"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","sourcesContent":["import Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport Navigation from './components/Navigation'\nimport Layout from './components/GeneralLayout'\n\nimport React, { Component } from 'react';\n\nclass Proveedores extends Component {\n    constructor ()\n    {\n        super();\n\n        //inicializa state\n        this.state = {\n            email: '',\n            message: ''\n        };\n\n        //Se necesita hacer bind a todas la funciones que se usen dentro de la clase.\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    //Se activa cuando se presiona enviar\n    handleSubmit(e)\n    {\n        //No se que hace pero debe ir al inicio\n        e.preventDefault();\n\n        //Poner aqui lo que tiene que hacer el form cuando se envia la informacion\n        console.log(this.state)\n\n        //Reincia los inputs\n        this.setState({\n            email: '',\n            message: ''\n        });\n    }\n\n    //Actualiza los valores cada vez que se hace un cambio en el input\n    handleInputChange(e)\n    {\n        //obtiene el valor y el nombre del componente que cambio\n        const {value, name} = e.target;\n        // console.log(value, name);\n\n        // Actualiza el campo que se modifico\n        this.setState({\n            [name]: value\n        });\n        // console.log(this.state)\n    }\n\n    render() {\n        return (\n            <div>\n                <Navigation />\n                <Layout>\n                    <h1 className=\"text-center pb-3\">Proveedores</h1>\n\n                    <div className=\"col-6 pt-4 mx-auto\">\n                        { /*\n                            Formulario de proveedores (Izquierda)\n                        */ }\n                        <Form className=\"col-xs-2 col-sm-3 col-md-4 col-lg-7 col-xl-8\" onSubmit={this.handleSubmit}>\n                            <Form.Group controlId=\"formContact.Name\">\n                                {/*\n                                    El form control tiene que tener un nombre igual a un atributo de la variable state. Cambiar el value={this.state.email} al atributo correspondiente. Hacerlo para cada input.\n                                */}\n                                <Form.Control name=\"name\" type=\"text\" placeholder=\"Nombre\" value={this.state.name} onChange={this.handleInputChange}/>\n                                <Form.Control name=\"lastName\" type=\"text\" placeholder=\"Apellidos\" value={this.state.lastName} onChange={this.handleInputChange}/>\n                            </Form.Group>\n                            <Form.Group controlId=\"formContact.Email\">\n                                {/*\n                                    El form control tiene que tener un nombre igual a un atributo de la variable state. Cambiar el value={this.state.email} al atributo correspondiente. Hacerlo para cada input.\n                                */}\n                                <Form.Control name=\"email\" type=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.handleInputChange}/>\n                            </Form.Group>\n                            <Form.Group controlId=\"formContact.Mensaje\">\n                                <Form.Control name=\"message\" as=\"textarea\" rows=\"4\" placeholder=\"Escriba aquí su mensaje\"  value={this.state.message} onChange={this.handleInputChange}/>\n                            </Form.Group>\n                            <Button variant=\"dark\" type=\"submit\">\n                                Enviar\n                            </Button>\n                        </Form>\n\n                    </div>\n                </Layout>\n            </div>\n        );\n    }\n}\n\nexport default Proveedores;\n"]},"metadata":{},"sourceType":"module"}