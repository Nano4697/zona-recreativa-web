{"ast":null,"code":"var _jsxFileName = \"/home/nano/Documents/AdmProyecto/zona-recreativa-web/pages/proveedores.js\";\nvar __jsx = React.createElement;\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Navigation from './components/Navigation';\nimport Layout from './components/GeneralLayout';\nimport React, { Component } from 'react';\n\nclass Proveedores extends Component {\n  constructor() {\n    super(); //inicializa state\n\n    this.state = {\n      email: '',\n      message: ''\n    }; //Se necesita hacer bind a todas la funciones que se usen dentro de la clase.\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } //Se activa cuando se presiona enviar\n\n\n  handleSubmit(e) {\n    //No se que hace pero debe ir al inicio\n    e.preventDefault(); //Poner aqui lo que tiene que hacer el form cuando se envia la informacion\n\n    console.log(this.state); //Reincia los inputs\n\n    this.setState({\n      email: '',\n      message: ''\n    });\n  } //Actualiza los valores cada vez que se hace un cambio en el input\n\n\n  handleInputChange(e) {\n    //obtiene el valor y el nombre del componente que cambio\n    const {\n      value,\n      name\n    } = e.target; // console.log(value, name);\n    // Actualiza el campo que se modifico\n\n    this.setState({\n      [name]: value\n    }); // console.log(this.state)\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      className: \"text-center pb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Proveedores\"), __jsx(\"div\", {\n      className: \"col-6 pt-4 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(Form, {\n      className: \"col-xs-2 col-sm-3 col-md-4 col-lg-7 col-xl-8\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, __jsx(Form.Group, {\n      className: \"row\",\n      controlId: \"formContact.Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Nombre\"), __jsx(Form.Control, {\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Nombre\",\n      value: this.state.name,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), __jsx(Form.Control, {\n      name: \"lastName\",\n      type: \"text\",\n      placeholder: \"Apellidos\",\n      value: this.state.lastName,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), __jsx(Form.Group, {\n      controlId: \"formContact.Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(Form.Control, {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), __jsx(Form.Group, {\n      controlId: \"formContact.Mensaje\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(Form.Control, {\n      name: \"message\",\n      as: \"textarea\",\n      rows: \"4\",\n      placeholder: \"Escriba aqu\\xED su mensaje\",\n      value: this.state.message,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), __jsx(Button, {\n      variant: \"dark\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Enviar\")))));\n  }\n\n}\n\nexport default Proveedores;","map":{"version":3,"sources":["/home/nano/Documents/AdmProyecto/zona-recreativa-web/pages/proveedores.js"],"names":["Form","Button","Navigation","Layout","React","Component","Proveedores","constructor","state","email","message","handleInputChange","bind","handleSubmit","e","preventDefault","console","log","setState","value","name","target","render","lastName"],"mappings":"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","sourcesContent":["import Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport Navigation from './components/Navigation'\nimport Layout from './components/GeneralLayout'\n\nimport React, { Component } from 'react';\n\nclass Proveedores extends Component {\n    constructor ()\n    {\n        super();\n\n        //inicializa state\n        this.state = {\n            email: '',\n            message: ''\n        };\n\n        //Se necesita hacer bind a todas la funciones que se usen dentro de la clase.\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    //Se activa cuando se presiona enviar\n    handleSubmit(e)\n    {\n        //No se que hace pero debe ir al inicio\n        e.preventDefault();\n\n        //Poner aqui lo que tiene que hacer el form cuando se envia la informacion\n        console.log(this.state)\n\n        //Reincia los inputs\n        this.setState({\n            email: '',\n            message: ''\n        });\n    }\n\n    //Actualiza los valores cada vez que se hace un cambio en el input\n    handleInputChange(e)\n    {\n        //obtiene el valor y el nombre del componente que cambio\n        const {value, name} = e.target;\n        // console.log(value, name);\n\n        // Actualiza el campo que se modifico\n        this.setState({\n            [name]: value\n        });\n        // console.log(this.state)\n    }\n\n    render() {\n        return (\n            <div>\n                <Navigation />\n                <Layout>\n                    <h1 className=\"text-center pb-3\">Proveedores</h1>\n\n                    <div className=\"col-6 pt-4 mx-auto\">\n                        { /*\n                            Formulario de proveedores (Izquierda)\n                        */ }\n                        <Form className=\"col-xs-2 col-sm-3 col-md-4 col-lg-7 col-xl-8\" onSubmit={this.handleSubmit}>\n                            <Form.Group className=\"row\" controlId=\"formContact.Name\">\n                                {/*\n                                    El form control tiene que tener un nombre igual a un atributo de la variable state. Cambiar el value={this.state.email} al atributo correspondiente. Hacerlo para cada input.\n                                */}\n                                <label for=\"name\">Nombre</label>\n                                <Form.Control name=\"name\" type=\"text\" placeholder=\"Nombre\" value={this.state.name} onChange={this.handleInputChange}/>\n                                <Form.Control name=\"lastName\" type=\"text\" placeholder=\"Apellidos\" value={this.state.lastName} onChange={this.handleInputChange}/>\n                            </Form.Group>\n                            <Form.Group controlId=\"formContact.Email\">\n                                {/*\n                                    El form control tiene que tener un nombre igual a un atributo de la variable state. Cambiar el value={this.state.email} al atributo correspondiente. Hacerlo para cada input.\n                                */}\n                                <Form.Control name=\"email\" type=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.handleInputChange}/>\n                            </Form.Group>\n                            <Form.Group controlId=\"formContact.Mensaje\">\n                                <Form.Control name=\"message\" as=\"textarea\" rows=\"4\" placeholder=\"Escriba aquí su mensaje\"  value={this.state.message} onChange={this.handleInputChange}/>\n                            </Form.Group>\n                            <Button variant=\"dark\" type=\"submit\">\n                                Enviar\n                            </Button>\n                        </Form>\n\n                    </div>\n                </Layout>\n            </div>\n        );\n    }\n}\n\nexport default Proveedores;\n"]},"metadata":{},"sourceType":"module"}