{"version":3,"file":"static/webpack/static/development/pages/galeria.js.54bf0988b266de63fe7c.hot-update.js","sources":["webpack:///./pages/components/Album.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport Gallery from 'react-grid-gallery';\n\nclass Album extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            images: this.props.images,\n            selectAllChecked: false\n        };\n\n        this.onSelectImage = this.onSelectImage.bind(this);\n        this.getSelectedImages = this.getSelectedImages.bind(this);\n        this.onClickSelectAll = this.onClickSelectAll.bind(this);\n    }\n\n    allImagesSelected (images){\n        var f = images.filter(\n            function (img) {\n                return img.isSelected == true;\n            }\n        );\n        return f.length == images.length;\n    }\n\n    onSelectImage (index, image) {\n        var images = this.state.images.slice();\n        var img = images[index];\n        if(img.hasOwnProperty(\"isSelected\"))\n            img.isSelected = !img.isSelected;\n        else\n            img.isSelected = true;\n\n        this.setState({\n            images: images\n        });\n\n        if(this.allImagesSelected(images)){\n            this.setState({\n                selectAllChecked: true\n            });\n        }\n        else {\n            this.setState({\n                selectAllChecked: false\n            });\n        }\n    }\n\n    getSelectedImages () {\n        var selected = [];\n        for(var i = 0; i < this.state.images.length; i++)\n            if(this.state.images[i].isSelected == true)\n                selected.push(i);\n        return selected;\n    }\n\n    onClickSelectAll () {\n        var selectAllChecked = !this.state.selectAllChecked;\n        this.setState({\n            selectAllChecked: selectAllChecked\n        });\n\n        var images = this.state.images.slice();\n        if(selectAllChecked){\n            for(var i = 0; i < this.state.images.length; i++)\n                images[i].isSelected = true;\n        }\n        else {\n            for(var i = 0; i < this.state.images.length; i++)\n                images[i].isSelected = false;\n\n        }\n        this.setState({\n            images: images\n        });\n    }\n\n    render () {\n        return (\n            <div className=\"col-9 mx-auto\" style={{ display: \"block\", minHeight: \"1px\", overflow: \"auto\"}}>\n                <Gallery images={this.state.images} onSelectImage={this.onSelectImage} showLightboxThumbnails={true}/>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    images: PropTypes.arrayOf(\n        PropTypes.shape({\n            src: PropTypes.string.isRequired,\n            thumbnail: PropTypes.string.isRequired,\n            srcset: PropTypes.array,\n            caption: PropTypes.string,\n            thumbnailWidth: PropTypes.number.isRequired,\n            thumbnailHeight: PropTypes.number.isRequired,\n            isSelected: PropTypes.bool\n        })\n    ).isRequired\n};\n\nAlbum.defaultProps = {\n    images: [\n        {\n            src: require(\"../resources/logo.png\"),\n            thumbnail: require(\"../resources/logo.png\"),\n            thumbnailWidth: \"10%\",\n            thumbnailHeight: \"10%\",\n            caption: \"After Rain (Jeshu John - designerspics.com)\"\n        },\n        {\n            src: require(\"../resources/logo.png\"),\n            thumbnail: require(\"../resources/logo.png\"),\n            thumbnailWidth: \"10%\",\n            thumbnailHeight: \"10%\",\n            caption: \"After Rain (Jeshu John - designerspics.com)\"\n        },\n        {\n            src: require(\"../resources/logo.png\"),\n            thumbnail: require(\"../resources/logo.png\"),\n            thumbnailWidth: \"10%\",\n            thumbnailHeight: \"10%\",\n            caption: \"After Rain (Jeshu John - designerspics.com)\"\n        },\n        {\n            src: require(\"../resources/logo.png\"),\n            thumbnail: require(\"../resources/logo.png\"),\n            thumbnailWidth: \"10%\",\n            thumbnailHeight: \"10%\",\n            caption: \"After Rain (Jeshu John - designerspics.com)\"\n        },\n        {\n            src: require(\"../resources/logo.png\"),\n            thumbnail: require(\"../resources/logo.png\"),\n            thumbnailWidth: \"10%\",\n            thumbnailHeight: \"10%\",\n            caption: \"After Rain (Jeshu John - designerspics.com)\"\n        },\n        {\n            src: require(\"../resources/logo.png\"),\n            thumbnail: require(\"../resources/logo.png\"),\n            thumbnailWidth: \"10%\",\n            thumbnailHeight: \"10%\",\n            caption: \"After Rain (Jeshu John - designerspics.com)\"\n        }\n    ]\n};\n\nexport default Album\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAVA;AAWA;AACA;;;AACA;AACA;AAEA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;AAKA;AACA;AADA;AACA;AAGA;AACA;AACA;AADA;AAGA;AAEA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;AADA;AAIA;AACA;AAAA;AACA;AACA;AADA;AAEA;AAEA;AACA;AADA;AAGA;AACA;AAAA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAlFA;AACA;AAoFA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAcA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AArCA;AA+CA;;;;A","sourceRoot":""}