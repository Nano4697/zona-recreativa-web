{"version":3,"file":"static/webpack/static/development/pages/contact.js.047e91739182da6329ef.hot-update.js","sources":["webpack:///./pages/contact.js"],"sourcesContent":["import Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport Navigation from './components/Navigation'\nimport Layout from './components/GeneralLayout'\n\nimport React, { Component } from 'react';\n\nclass Proveedores extends Component {\n    constructor ()\n    {\n        super();\n        this.state = {\n            email: '',\n            message: ''\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    //Se activa cuando se presiona enviar\n    handleSubmit(e)\n    {\n        //No se que hace pero debe ir al inicio\n        e.preventDefault();\n\n        //Poner aqui lo que tiene que hacer el form cuando se envia la informacion\n        console.log(this.state)\n\n        //Reincia los inputs\n        this.setState({\n            email: '',\n            message: ''\n        });\n    }\n\n    //Actualiza los valores cada vez que se hace un cambio en el input\n    handleInputChange(e)\n    {\n        //obtiene el valor y el nombre del componente que cambio\n        const {value, name} = e.target;\n        // console.log(value, name);\n\n        // Actualiza el campo que se modifico\n        this.setState({\n            [name]: value\n        });\n        // console.log(this.state)\n    }\n\n    render() {\n        return (\n            <div>\n                <Navigation />\n                <Layout>\n                    <h1 className=\"text-center pb-3\">Contacto</h1>\n\n                    <div className=\"row col-6 row pt-4 mx-auto\">\n                        { /*\n                            Formulario de proveedores (Izquierda)\n                        */ }\n                        <Form className=\"col-xs-2 col-sm-3 col-md-4 col-lg-7 col-xl-8\" onSubmit={this.handleSubmit}>\n                            <Form.Group controlId=\"formContact.Email\">\n                                {/*\n                                    El form control tiene que tener un nombre igual a un atributo de la variable state. Cambiar el value={this.state.email} al atributo correspondiente. Hacerlo para cada input.\n                                */}\n                                <Form.Control name=\"email\" type=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.handleInputChange}/>\n                            </Form.Group>\n                            <Form.Group controlId=\"formContact.Mensaje\">\n                                <Form.Control name=\"message\" as=\"textarea\" rows=\"4\" placeholder=\"Escriba aquí su mensaje\"  value={this.state.message} onChange={this.handleInputChange}/>\n                            </Form.Group>\n                            <Button variant=\"dark\" type=\"submit\">\n                                Enviar\n                            </Button>\n                        </Form>\n                        { /*\n                            Información de contacto (Derecha)\n                        */ }\n                        <div className=\"col-xs-2 col-sm-3 col-md-4 col-lg-5 col-xl-4 \">\n                            <div className=\"justify-content-center\">\n                                <div>\n                                    <h6>Zona Recreativa CR</h6>\n\n                                    <p className=\"text-secondary\">\n                                        acme.info@2mail.com\n                                    </p>\n                                    <p className=\"text-secondary\">\n                                        +0 000-000-0000\n                                    </p>\n                                    { /*<h6>FOLLOW US</h6>*/ }\n\n                                    { /*\n                                        Enlaces externos\n                                    */ }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Layout>\n            </div>\n        );\n    }\n}\n\nexport default Proveedores;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;AACA;AACA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AACA;AARA;AASA;AACA;AACA;;;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;;;AAEA;AAEA;AADA;AAAA;AAAA;AAKA;AACA;AAAA;AAIA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;;;;AA9FA;AACA;AAgGA;;;;A","sourceRoot":""}